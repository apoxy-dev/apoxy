apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apoxy-gateway.fullname" . }}-backplane
  namespace: {{ include "apoxy-gateway.namespace" . }}
  labels:
    {{- include "apoxy-gateway.labels" . | nindent 4 }}
    app.kubernetes.io/component: backplane
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "apoxy-gateway.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backplane
  {{- with .Values.backplane.strategy }}
  strategy:
    type: {{ .type }}
    {{- with .rollingUpdate }}
    rollingUpdate:
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.backplane.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "apoxy-gateway.selectorLabels" . | nindent 8 }}
        kvstore.apoxy.dev: {{ include "apoxy-gateway.fullname" . }}
        app.kubernetes.io/component: backplane
    spec:
      {{- with .Values.backplane.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "apoxy-gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backplane.podSecurityContext | nindent 8 }}
      containers:
        - name: backplane
          securityContext:
            {{- toYaml .Values.backplane.securityContext | nindent 12 }}
          image: "{{ .Values.backplane.image.repository }}:{{ .Values.backplane.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backplane.image.pullPolicy }}
          args:
            - --proxy={{ .Values.backplane.proxy.name }}
            - --apiserver_addr={{ include "apoxy-gateway.fullname" . }}-apiserver
          {{- if gt (.Values.backplane.overload.maxHeapSizeBytes | int) 0 }}
            - --overload-max-heap-size-bytes={{ .Values.backplane.overload.maxHeapSizeBytes }}
          {{- end }}
          {{- if gt (.Values.backplane.overload.maxActiveConnections | int) 0 }}
            - --overload-max-active-connections={{ .Values.backplane.overload.maxActiveConnections }}
          {{- end }}
          {{- with .Values.backplane.extraArgs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- with .Values.backplane.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- with .Values.backplane.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: 8888
              protocol: TCP
          {{- with .Values.backplane.proxy.listeners }}
          {{- range . }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              initialDelaySeconds: 30
              periodSeconds: 5
              timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8083
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.backplane.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.backplane.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.backplane.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      # Set the termination grace period to the drain timeout plus a buffer
      # to allow for the proxy to finish draining connections.
      terminationGracePeriodSeconds: {{ .Values.backplane.proxy.drainTimeoutSeconds | add 5 }}
      {{- with .Values.backplane.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backplane.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backplane.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backplane.extraVolumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
