apiVersion: controllers.apoxy.dev/v1alpha1
kind: Proxy
metadata:
  name: example
spec:
  provider: unmanaged
  monitoring:
    tracing:
      enabled: true
---
apiVersion: gateway.apoxy.dev/v1
kind: GatewayClass
metadata:
  name: apoxy
spec:
  controllerName: gateway.apoxy.dev/gatewayclass-controller
---
apiVersion: gateway.apoxy.dev/v1
kind: Gateway
metadata:
  name: example
spec:
  gatewayClassName: apoxy
  infrastructure:
    parametersRef:
      kind: Proxy
      name: example
  listeners:
    - protocol: HTTP
      port: 10000
      name: example
---
apiVersion: gateway.apoxy.dev/v1
kind: HTTPRoute
metadata:
  name: alpamayo
spec:
  parentRefs:
    - name: example
      port: 10000
      kind: Gateway
  hostnames:
    - "*"
  rules:
    - backendRefs:
        - kind: EdgeFunction
          group: extensions.apoxy.dev
          name: websocket
---
apiVersion: extensions.apoxy.dev/v1alpha2
kind: EdgeFunction
metadata:
  name: websocket
spec:
  template:
    mode: backend
    runtime:
      port: 8801
    code:
      jsSource:
        entrypoint: "main.ts"
        assets:
          files:
            - path: "main.ts"
              content: |
                interface reqPayload {
                	name: string;
                }

                console.info('server started modified');

                Deno.serve(async (req: Request) => {
                	const { name }: reqPayload = await req.json();
                	const data = {
                		message: `Hello ${name} from foo!`,
                	};

                	return new Response(
                		JSON.stringify(data),
                		{ headers: { 'Content-Type': 'application/json', 'Connection': 'keep-alive' } },
                	);
                });
