package cmd

import (
	"fmt"
	"io"
	"net/http"
	"net/url"
	"os"

	"github.com/spf13/cobra"
)

var logsCmd = &cobra.Command{
	Use:   "logs",
	Short: "View proxy logs",
	Long: `View the request/process logs generated by your proxies.  Logs can be filtered by proxy instance
and/or date range. By default, logs are streamed in real-time.`,
	RunE: func(cmd *cobra.Command, args []string) error {
		proxy, err := cmd.Flags().GetString("proxy")
		if err != nil {
			return err
		}

		cmd.SilenceUsage = true

		c, err := defaultAPIClient()
		if err != nil {
			return err
		}

		params := url.Values{}
		if proxy != "" {
			params.Add("query", fmt.Sprintf("proxy=%q", proxy))
		}

		resp, err := c.SendRequest(http.MethodGet, "/v1/logs?"+params.Encode(), nil)
		if err != nil {
			return err
		}
		defer resp.Body.Close()

		if resp.StatusCode != http.StatusOK {
			return fmt.Errorf("unexpected status code: %d", resp.StatusCode)
		}

		_, err = io.Copy(os.Stdout, resp.Body)
		if err != nil {
			return err
		}

		return nil
	},
}

func init() {
	logsCmd.PersistentFlags().StringP("proxy", "p", "", "Proxy name")
	rootCmd.AddCommand(logsCmd)
}
